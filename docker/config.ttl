PREFIX :          <http://base/#>
PREFIX bibo:      <http://purl.org/ontology/bibo/>
PREFIX dc:        <http://purl.org/dc/elements/1.1/>
PREFIX dcterms:   <http://purl.org/dc/terms/>
PREFIX ex:        <http://example.org/>
PREFIX fuseki:    <http://jena.apache.org/fuseki#>
PREFIX geosparql: <http://jena.apache.org/geosparql#>
PREFIX ja:        <http://jena.hpl.hp.com/2005/11/Assembler#>
PREFIX rdf:       <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:      <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema:    <https://schema.org/>
PREFIX skos:      <http://www.w3.org/2004/02/skos/core#>
PREFIX tdb2:      <http://jena.apache.org/2016/tdb#>
PREFIX text:      <http://jena.apache.org/text#>

[] rdf:type fuseki:Server ;
   # Example::
   # Server-wide query timeout.
   #
   # Timeout - server-wide default: milliseconds.
   # Format 1: "1000" -- 1 second timeout
   # Format 2: "10000,60000" -- 10s timeout to first result,
   #                            then 60s timeout for the rest of query.
   #
   # See javadoc for ARQ.queryTimeout for details.
   # This can also be set on a per dataset basis in the dataset assembler.
   #
   # ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "30000" ] ;

   # Add any custom classes you want to load.
   # Must have a "public static void init()" method.

   ja:loadClass
        "ai.kurrawong.jena.compoundnaming.getParts" ;
.

:service_tdb_all  rdf:type  fuseki:Service;
        rdfs:label       "ds";
        # fuseki:dataset   :geosparql_dataset;
        fuseki:dataset   :text_dataset;
        fuseki:endpoint  [ fuseki:name       "query";
                           fuseki:operation  fuseki:query
                         ];
        fuseki:endpoint  [ fuseki:name       "data";
                           fuseki:operation  fuseki:gsp-rw
                         ];
        fuseki:endpoint  [ fuseki:name       "get";
                           fuseki:operation  fuseki:gsp-r
                         ];
        fuseki:endpoint  [ fuseki:operation  fuseki:update ];
        fuseki:endpoint  [ fuseki:operation  fuseki:gsp-rw ];
        fuseki:endpoint  [ fuseki:name       "sparql";
                           fuseki:operation  fuseki:query
                         ];
        fuseki:endpoint  [ fuseki:operation  fuseki:query ];
        fuseki:endpoint  [ fuseki:name       "update";
                           fuseki:operation  fuseki:update
                         ];
        fuseki:name      "ds" .

# :geosparql_dataset  rdf:type            geosparql:geosparqlDataset;
#         geosparql:applyDefaultGeometry  false;
#         geosparql:dataset               :text_dataset;
#         geosparql:indexEnabled          true;
#         geosparql:indexExpires          "5000,5000,5000";
#         geosparql:indexSizes            "-1,-1,-1";
#         geosparql:inference             false;
#         geosparql:queryRewrite          true;
#         geosparql:spatialIndexFile      "/fuseki/databases/ds/spatial.index" .

:text_dataset  rdf:type  text:TextDataset;
        text:dataset  :tdb_dataset_readwrite;
        text:index    :index_lucene .

:tdb_dataset_readwrite
        rdf:type                tdb2:DatasetTDB2;
        tdb2:location           "/fuseki/databases/ds";
        # Query timeout, 30 sec
        ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "30000" ] ;
        tdb2:unionDefaultGraph  false .

:index_lucene  rdf:type   text:TextIndexLucene;
        text:analyzer     [ rdf:type  text:StandardAnalyzer ];
        text:directory    "/fuseki/databases/ds/lucene";
        text:entityMap    :entity_map;
        text:propLists    ( [ text:propListProp  ex:searchFields;
                              text:props         ( rdfs:label )
                            ]
                          );
        text:storeValues  true .

:entity_map  rdf:type      text:EntityMap;
        text:defaultField  "label";
        text:entityField   "uri";
        text:graphField    "graph";
        text:langField     "lang";
        text:map           ( [ text:field      "label";
                               text:predicate  rdfs:label
                             ]
                           );
        text:uidField      "uid" .